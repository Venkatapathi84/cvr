class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class Stack:
    def __init__(self):
        self.top = None  # Top of stack

    def is_empty(self):
        return self.top is None

    def push(self, data):
        new_node = Node(data)
        new_node.next = self.top  # New node points to the old top
        self.top = new_node       # Top is now the new node

    def pop(self):
        if self.is_empty():
            raise IndexError("Stack Underflow - The stack is empty.")
        popped = self.top.data
        self.top = self.top.next  # Move top to the next node
        return popped

    def peek(self):
        if self.is_empty():
            raise IndexError("Stack is empty.")
        return self.top.data

    def display(self):
        current = self.top
        if not current:
            print("Stack is empty.")
        else:
            print("Stack (top to bottom):")
            while current:
                print(current.data)
                current = current.next
